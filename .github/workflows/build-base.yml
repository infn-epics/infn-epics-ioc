name: Build and publish image to ghcr.io/epics-containers

on:
  push:
  pull_request:

jobs:
  build-base:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Check tag pattern
        id: check_tag
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG" =~ ^[0-9.]+$ ]]; then
            echo "match=true" >> $GITHUB_OUTPUT
          else
            echo "match=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Docker Registry
        if: steps.check_tag.outputs.match == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        if: steps.check_tag.outputs.match == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.check_tag.outputs.match == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and Push base image
        if: steps.check_tag.outputs.match == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.base
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-base:${{ github.ref_name }}
          push: true

      - name: Create GitHub Release for tag
        if: steps.check_tag.outputs.match == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true

      - name: Create/Update GitHub Release for latest
        if: steps.check_tag.outputs.match == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          generate_release_notes: true

