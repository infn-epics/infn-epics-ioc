services:
  - docker:19.03.12-dind

stages:
    - build
    - test

build_image:
#  tags:
#    - lnf
  stage: build
  image: docker:19.03.12
  variables:
    # When using dind service, you must instruct docker to talk with the
    # daemon started inside of the service. The daemon is available with
    # a network connection instead of the default /var/run/docker.sock socket.
    #
    # The 'docker' hostname is the alias of the service container as described at
    # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
    #
    # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
    # the variable must be set to tcp://localhost:2375 because of how the
    # Kubernetes executor connects services to the job container
    # DOCKER_HOST: tcp://localhost:2375
    #
    # DOCKER_HOST: tcp://docker:2375
    #
    # This instructs Docker not to start over TLS.
    DOCKER_TLS_CERTDIR: ""
    LAST_TAG: $CI_COMMIT_REF_NAME
    LATEST_TAG: "latest"
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - apk add --no-cache git

    
  script:
    - LAST_TAG=$(git describe --tags --abbrev=0)
    - docker login baltig.infn.it:4567 -u DOCKER_IO_KEY -p ${DOCKER_IO_KEY}
    - docker build --build-arg TARGET_ARCHITECTURE="linux" --build-arg TARGETARCH="amd64" -t baltig.infn.it:4567/epics-containers/infn-epics-ioc:$LAST_TAG .
    - docker tag baltig.infn.it:4567/epics-containers/infn-epics-ioc:$LAST_TAG baltig.infn.it:4567/epics-containers/infn-epics-ioc:$LATEST_TAG
    - docker push baltig.infn.it:4567/epics-containers/infn-epics-ioc:$LAST_TAG
    - docker push baltig.infn.it:4567/epics-containers/infn-epics-ioc:$LATEST_TAG
    - docker build -f Dockerfile.devel --build-arg TARGET_ARCHITECTURE="linux" --build-arg TARGETARCH="amd64" -t baltig.infn.it:4567/epics-containers/infn-epics-ioc:devel .
    - docker push baltig.infn.it:4567/epics-containers/infn-epics-ioc:devel

    # - docker build --build-arg TARGET_ARCHITECTURE="linux" --build-arg TARGETARCH="crossarm" -t baltig.infn.it:4567/epics-containers/infn-epics-ioc:arm64 .
    # - docker push baltig.infn.it:4567/epics-containers/infn-epics-ioc:arm64

test_image:
  stage: test
  image: baltig.infn.it:4567/epics-containers/infn-epics-ioc:latest
  variables:
    DOCKER_TLS_CERTDIR: ""
  
  script: |
      # List all files in the support directory
      supps=$(ls tests/support/*)
      # Define the path to the ibek definition files
      defs='/epics/ibek-defs/*.ibek.support.yaml'
      # Iterate over each support file
      for k in $supps; do
        echo "* Testing $k"
        # Generate the runtime for each support file using the definitions
        ibek runtime generate "$k" $defs
        cat /epics/runtime/st.cmd
      done
    



